<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>SICP - 标签 - Bing's Blog</title><link>https://imcbc.cn/tags/sicp/</link><description>SICP - 标签 - Bing's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jack_cbc@163.com (bing)</managingEditor><webMaster>jack_cbc@163.com (bing)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 17 Sep 2021 09:28:55 +0800</lastBuildDate><atom:link href="https://imcbc.cn/tags/sicp/" rel="self" type="application/rss+xml"/><item><title>《UCB CS61a SICP Python 中文》一周目笔记(四)</title><link>https://imcbc.cn/202109/sicp-python-read4/</link><pubDate>Fri, 17 Sep 2021 09:28:55 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202109/sicp-python-read4/</guid><description><![CDATA[<h2 id="并行计算序列和协程">并行计算、序列和协程</h2>
<p>锁、条件变量、死锁在译文中的描述符合我的认知，在此就不介绍了。以下是关于信号量的补充，在文章<a href="202105/process-ctracon3/" rel="">《进程控制和通信(三) <strong>· 消息、信号、共享内存</strong>》</a>中描述过信号量，但是仅将信号量作为锁的一种实现方法。</p>]]></description></item><item><title>《UCB CS61a SICP Python 中文》一周目笔记(三)</title><link>https://imcbc.cn/202109/sicp-python-read3/</link><pubDate>Thu, 02 Sep 2021 19:56:00 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202109/sicp-python-read3/</guid><description>&lt;blockquote>
&lt;p>我们需要将自己看做语言的设计者，而不只是由他人设计的语言用户。&lt;/p>
&lt;/blockquote></description></item><item><title>《UCB CS61a SICP Python 中文》一周目笔记(二)</title><link>https://imcbc.cn/202108/sicp-python-read2/</link><pubDate>Thu, 26 Aug 2021 16:29:13 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202108/sicp-python-read2/</guid><description><![CDATA[<p>在上一章中我们主要学习了函数. 关注了函数的调用过程, 也学习了高阶函数. 高阶函数实际上是比较&quot;古老&quot;的技术, 在Lisp原生支持. 但是C语言似乎并没有或者很难实现高阶函数, 不过这一点在C++中有所缓解. 这一篇主要关注程序的数据.</p>]]></description></item><item><title>《UCB CS61a SICP Python 中文》一周目笔记(一)</title><link>https://imcbc.cn/202108/sicp-python-read1/</link><pubDate>Tue, 10 Aug 2021 09:47:34 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202108/sicp-python-read1/</guid><description><![CDATA[<p>UCB SICP译文, 看<a href="https://wizardforcel.gitbooks.io/sicp-py/content/ch1.html" target="_blank" rel="noopener noreffer">这里</a>.</p>
<p>令我印象深刻的是MIT SICP第一章中的例子<a href="https://sicp.readthedocs.io/en/latest/chp1/5.html" target="_blank" rel="noopener noreffer">题1.5:应用序和正则序</a>.</p>]]></description></item></channel></rss>