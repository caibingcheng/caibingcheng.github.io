<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>glibc - 分类 - Bing's Blog</title><link>https://imcbc.cn/categories/glibc/</link><description>glibc - 分类 - Bing's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>jack_cbc@163.com (bing)</managingEditor><webMaster>jack_cbc@163.com (bing)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 08 Jan 2023 09:40:09 +0800</lastBuildDate><atom:link href="https://imcbc.cn/categories/glibc/" rel="self" type="application/rss+xml"/><item><title>glibc-read/write源码阅读</title><link>https://imcbc.cn/202301/glibc-read-write/</link><pubDate>Sun, 08 Jan 2023 09:40:09 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202301/glibc-read-write/</guid><description><![CDATA[<p>Linux文件系统可以分为两层，虚拟文件系统(VFS)和驱动。VFS主要和驱动对接，以实现对不同文件系统的适配和管理。本文阅读的<code>read/write</code>函数是VFS层面的，源码如下：<a href="https://codebrowser.dev/linux/linux/fs/read_write.c.html" target="_blank" rel="noopener noreffer">https://codebrowser.dev/linux/linux/fs/read_write.c.html</a></p>]]></description></item><item><title>glibc-malloc源码阅读二</title><link>https://imcbc.cn/202203/glibc-malloc2/</link><pubDate>Wed, 30 Mar 2022 19:54:42 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202203/glibc-malloc2/</guid><description>&lt;p>在&lt;a href="/202203/glibc-malloc/" rel="">上一篇&lt;/a>中，存留了一些疑问:&lt;/p></description></item><item><title>glibc-malloc源码阅读</title><link>https://imcbc.cn/202203/glibc-malloc/</link><pubDate>Fri, 25 Mar 2022 11:10:19 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202203/glibc-malloc/</guid><description><![CDATA[<p>在<a href="/202202/glibc-mmap/" rel="">上一篇</a>中，我们了解到了<code>mmap</code>的一些性质和基本原理：</p>]]></description></item><item><title>glibc-mmap源码阅读</title><link>https://imcbc.cn/202202/glibc-mmap/</link><pubDate>Mon, 28 Feb 2022 10:54:03 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202202/glibc-mmap/</guid><description><![CDATA[<p>本篇通过学习<code>mmap</code>的实现，将帮助解答<a href="/202105/process-ctracon4#%e5%86%85%e5%ad%98%e7%ae%a1%e7%90%86" rel="">《进程控制和通信(四) · PCB介绍 》</a>中的一些问题，以及加深对虚拟内存的理解。</p>]]></description></item><item><title>glibc-fopen源码阅读-补充篇-open系统调用</title><link>https://imcbc.cn/202202/fopen-sys-open/</link><pubDate>Tue, 22 Feb 2022 16:50:08 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202202/fopen-sys-open/</guid><description><![CDATA[<p>上一篇<a href="/202106/fopen-deep" rel="">《glibc-fopen源码阅读》</a>讲到了<code>fopen</code>是怎么工作的，以及<code>FILE</code>是怎么和文件关联起来的。但是再次阅读之后，发现还是有些细节存在疑问：</p>]]></description></item><item><title>glibc-exit源码阅读</title><link>https://imcbc.cn/202201/glibc-exit/</link><pubDate>Mon, 24 Jan 2022 11:21:36 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202201/glibc-exit/</guid><description><![CDATA[<h2 id="glibc调用-exit">glibc调用 exit</h2>
<p>在<a href="https://code.woboq.org/userspace/glibc/stdlib/exit.c.html" target="_blank" rel="noopener noreffer">exit.c</a>可以找到<code>exit</code>的实现。</p>]]></description></item><item><title>glibc-raise源码阅读</title><link>https://imcbc.cn/202111/glibc-raise/</link><pubDate>Tue, 16 Nov 2021 14:15:15 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202111/glibc-raise/</guid><description><![CDATA[<h2 id="问题">问题</h2>
<p>关于<code>raise</code>函数，有几个想调查的问题：</p>]]></description></item><item><title>glibc-abort源码阅读</title><link>https://imcbc.cn/202111/glibc-abort/</link><pubDate>Thu, 11 Nov 2021 11:24:29 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202111/glibc-abort/</guid><description><![CDATA[<h2 id="问题">问题</h2>
<p>关于<code>abort</code>函数，有几个想调查的问题：</p>]]></description></item><item><title>glibc-fopen源码阅读</title><link>https://imcbc.cn/202106/fopen-deep/</link><pubDate>Tue, 01 Jun 2021 17:21:19 +0800</pubDate><author>作者</author><guid>https://imcbc.cn/202106/fopen-deep/</guid><description><![CDATA[<h2 id="file">FILE</h2>
<p><code>fopen</code>返回值是<code>FILE</code>结构体, 先来看看<a href="https://code.woboq.org/userspace/glibc/libio/bits/types/struct_FILE.h.html#_IO_FILE" target="_blank" rel="noopener noreffer">FILE</a>结构体的内容:</p>]]></description></item></channel></rss>